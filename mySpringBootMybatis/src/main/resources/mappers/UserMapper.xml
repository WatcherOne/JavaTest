<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.watcher.mapper.UserMapper">

    <!-- 开启二级缓存  -->
    <!--
        1. eviction: 缓存回收策略
            A. LRU - 最近最少使用：移除最长时间不被使用的对象，默认
            B. FIFO - 先进先出：按对象进入缓存的顺序来移除
            C. SOFT - 软引用
            D. WEAK -
        2. flushInterval: 刷新间隔，毫秒
            默认情况是不设置即没有刷新间隔，缓存仅仅调用语句时刷新
            语句指增删改语句
        3. size属性：引用数目，正整数
            代表缓存最多可以缓存多少个对象，太大容易导致内存溢出
        4. readOnly: 只读 true/false, 默认false
            true: 只读缓存，会给所有调用者返回缓存对象的相同实例，因此这些对象不能被修改，提供了很多性能优势
            false：读写缓存，会返回缓存对象的拷贝(通过序列化)，会慢一点，但安全
    -->
    <cache
        eviction="LRU"
        size="1024"
        readOnly="false"></cache>
    <!--
    缓存查询顺序
    1. 先 二级缓存，因为二级缓存中可能有其它程序已经查出来的数据，可以直接拿来用
    2. 如果二级缓存没有命中，再查询一级缓存
    3. 如果一级缓存也没有命中，则查询数据库
    4. SqlSession关闭之后，一级缓存中的数据会写入二级缓存中
    -->

    <sql id="userParams">
        select
            IF(u.sex = 0, "女", "男") as sexName,
            u.*
        from user u
    </sql>

    <select id="getUserList" resultType="User">
        <include refid="userParams"></include>
    </select>

    <select id="getUserListByColumn" resultType="User">
        <include refid="userParams"></include>
        <where>
            <if test="column != null and column != '' and value != null and value != ''">
                ${column} = #{value}
            </if>
        </where>
    </select>

    <select id="getUserById" resultType="User">
        <include refid="userParams"></include>
        <where>
            <if test="userId != null and userId != ''">
                id = #{userId}
            </if>
        </where>
    </select>

    <insert id="addUser" parameterType="User">
        insert into user values(null, #{userName}, #{age}, #{sex}, #{idCard}, #{password})
    </insert>

    <update id="updateUser" parameterType="User">
        update
            user
        set
            user_name = #{userName},
            age = #{age},
            sex = #{sex},
            id_card = #{idCard},
            password = #{password}
        where id = #{id}
    </update>
</mapper>